{"version":3,"sources":["components/Movie/Movie.jsx","components/MovieList/MovieList.jsx","components/FileUpload/FileUpload.jsx","components/NewMovieForm/NewMovieForm.jsx","api/api.js","App.jsx","index.jsx"],"names":["Movie","movie","removeMovie","useState","isShown","setIsShown","className","role","tabIndex","classnames","onClick","onKeyDown","title","type","id","year","format","actors","map","actor","MovieList","movies","FileUpload","showUploadedMovies","uploadedMovies","setUploadedMovies","handleFile","e","parseMovies","target","result","split","movieValue","trim","property","accept","onChange","file","fileData","FileReader","onloadend","readAsText","handleChangeFile","files","NewMovieForm","addMovie","newMovie","setNewMovie","handleChange","name","value","console","log","action","onSubmit","preventDefault","required","placeholder","GetMoviesFromServer","fetch","method","headers","body","JSON","stringify","then","response","json","App","setMovies","searchQuery","setSearchQuery","useEffect","a","moviesFromServer","error","fetchPosts","filteredMovies","filter","toLowerCase","includes","find","sortedMovies","sort","movieA","movieB","localeCompare","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9fd3d10.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport './movie.scss';\n\nexport const Movie = ({ movie, removeMovie }) => {\n  const [isShown, setIsShown] = useState(false);\n\n  return (\n    <div>\n      <div className=\"movie-heading\">\n        <div\n          role=\"button\"\n          tabIndex={0}\n          className={classnames('movie-title',\n            { 'movie-title--open': isShown })}\n          onClick={() => setIsShown(!isShown)}\n          onKeyDown={() => setIsShown(!isShown)}\n        >\n          {movie.title}\n        </div>\n        <button\n          className=\"delete-btn\"\n          type=\"button\"\n          onClick={() => removeMovie(movie.id)}\n        >\n          &#128465;\n        </button>\n      </div>\n      <div className={classnames('movie-information',\n        { 'movie-information--active': isShown })}\n      >\n        <p>\n          <span className=\"movie-information__name\">Release year: </span>\n          {movie.year}\n        </p>\n        <p>\n          <span className=\"movie-information__name\">Movie format: </span>\n          {movie.format}\n        </p>\n        <div>\n          <span className=\"movie-information__name\">Cast: </span>\n          {movie.actors.map(actor => <p key={actor}>{actor}</p>)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMovie.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n    format: PropTypes.string.isRequired,\n    actors: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n  removeMovie: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Movie } from '../Movie/Movie';\n\nexport const MovieList = ({ movies, removeMovie }) => (\n  <div>\n    {movies.map(movie => (\n      <Movie\n        key={movie.id}\n        movie={movie}\n        removeMovie={removeMovie}\n      />\n    ))\n    }\n  </div>\n);\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n    format: PropTypes.string.isRequired,\n  })).isRequired,\n  removeMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './fileUpload.scss';\n\nexport function FileUpload({ showUploadedMovies }) {\n  const [uploadedMovies, setUploadedMovies] = useState([]);\n  const handleFile = (e) => {\n    const content = e.target.result;\n    const parseMovies = content.split(/\\n\\r\\n/).map((movie) => {\n      const movieProperties = movie.trim().split(/\\r\\n/);\n\n      const movieValue = movieProperties.map((property) => {\n        const value = property.split(': ')[1];\n\n        return value;\n      });\n\n      return {\n        id: movieValue[0] + movieValue[1],\n        title: movieValue[0],\n        year: movieValue[1],\n        format: movieValue[2],\n        actors: movieValue[3].split(', '),\n      };\n    });\n\n    setUploadedMovies(parseMovies);\n  };\n\n  const handleChangeFile = (file) => {\n    const fileData = new FileReader();\n\n    fileData.onloadend = handleFile;\n    fileData.readAsText(file);\n  };\n\n  return (\n    <div className=\"form-upload\">\n      <input\n        className=\"form-upload__input\"\n        type=\"file\"\n        accept=\".txt\"\n        onChange={e => handleChangeFile(e.target.files[0])}\n      />\n      <button\n        type=\"button\"\n        className=\"form-upload__button\"\n        onClick={() => {\n          showUploadedMovies(uploadedMovies);\n          setUploadedMovies([]);\n        }}\n      >\n        Show movies\n      </button>\n    </div>\n  );\n}\n\nFileUpload.propTypes = {\n  showUploadedMovies: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './newMovieForm.scss';\n\nexport const NewMovieForm = ({ addMovie }) => {\n  const [newMovie, setNewMovie] = useState({\n    id: '',\n    title: '',\n    year: 2022,\n    format: '',\n    actors: [''],\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    if (name === 'year') {\n      setNewMovie({\n        ...newMovie,\n        year: +value,\n      });\n    }\n\n    setNewMovie({\n      ...newMovie,\n      id: newMovie.title + newMovie.year,\n      [name]: value,\n    });\n\n    // eslint-disable-next-line no-console\n    console.log(newMovie);\n  };\n\n  const clearForm = () => {\n    setNewMovie(\n      {\n        id: 2022,\n        title: '',\n        year: '',\n        format: '',\n      },\n    );\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    addMovie(newMovie);\n    clearForm();\n  };\n\n  return (\n    <>\n      <div className=\"form-title\">Add a new movie</div>\n      <form action=\"\" onSubmit={handleSubmit}>\n        <div className=\"input-title\">\n          <label className=\"label\">\n            <input\n              className=\"input\"\n              required\n              type=\"text\"\n              id=\"title\"\n              placeholder=\"Enter movie title\"\n              value={newMovie.title}\n              name=\"title\"\n              onChange={handleChange}\n            />\n          </label>\n        </div>\n        <div className=\"input-year\">\n          <input\n            className=\"input\"\n            required\n            type=\"text\"\n            id=\"year\"\n            placeholder=\"Enter movie release year\"\n            value={newMovie.year}\n            name=\"year\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"input-format\">\n          <select\n            className=\"input\"\n            name=\"format\"\n            id=\"format\"\n            value={newMovie.format}\n            onChange={handleChange}\n          >\n            <option value=\"DVD\">DVD</option>\n            <option value=\"Blu-Ray\">Blu-Ray</option>\n            <option value=\"VHC\">VHC</option>\n          </select>\n        </div>\n        <button\n          className=\"form-button\"\n          type=\"submit\"\n        >\n          Add movie\n        </button>\n      </form>\n    </>\n  );\n};\n\nNewMovieForm.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","// export const PostMoviesToServer = movie => {\n//   return fetch('http://localhost:8000/api/v1/movies', {\n//     method: 'POST',\n//     credentials: 'same-origin',\n//     headers: {\n//       'Content-Type': 'application/json;charset=utf-8',\n/* eslint-disable */ \n//       'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjI0OTcyMjYwfQ.X31cryg_A126WLYT96PD-SLLFWSxb2SeoQZ4cvx3VhU',\n//     },\n\n//     body: JSON.stringify(movie),\n//   })\n//     .then(response => response.json());\n// };\n\n/* eslint-disable */ \nexport const GetMoviesFromServer = () => {  \n  return fetch('http://localhost:8000/api/v1/movies?sort=year&order=DESC&limit=10&offset=0', {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8',\n      'Authorization': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiaWF0IjoxNjI0OTcyMjYwfQ.X31cryg_A126WLYT96PD-SLLFWSxb2SeoQZ4cvx3VhU',\n    },\n    body: JSON.stringify(),\n  })\n    .then(response => response.json())\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { MovieList } from './components/MovieList/MovieList';\nimport { FileUpload } from './components/FileUpload/FileUpload';\nimport { NewMovieForm } from './components/NewMovieForm/NewMovieForm';\nimport { GetMoviesFromServer } from './api/api';\n\nexport const App = () => {\n  const [movies, setMovies] = useState([\n    {\n      id: '1',\n      title: 'Blazing Saddles',\n      year: 1974,\n      format: 'VHS',\n      actors: [\n        'Harvey Korman',\n        'Gene Wilder',\n        'Slim Pickens',\n        'Madeline Kahn',\n      ],\n    },\n    {\n      id: '2',\n      title: 'Matrix',\n      year: 2000,\n      format: 'VHS',\n      actors: [\n        'Mel Brooks',\n      ],\n    },\n  ]);\n\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    async function fetchPosts() {\n      try {\n        const moviesFromServer = await GetMoviesFromServer();\n\n        // eslint-disable-next-line no-console\n        console.log(moviesFromServer);\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error(error);\n      }\n    }\n\n    fetchPosts();\n  }, []);\n\n  const addMovie = (newMovie) => {\n    setMovies([\n      ...movies,\n      newMovie,\n    ]);\n  };\n\n  const showUploadedMovies = (uploadedMovies) => {\n    setMovies([...movies, ...uploadedMovies]);\n  };\n\n  const removeMovie = (id) => {\n    setMovies(movies.filter(movie => movie.id !== id));\n  };\n\n  const sortAlphabetically = () => {\n    const sortedMovies = movies.sort((movieA, movieB) => (\n      movieA.title.localeCompare(movieB.title)));\n\n    setMovies([...sortedMovies]);\n  };\n\n  const searchMovie = (e) => {\n    const { value } = e.target;\n\n    setSearchQuery(value.toLowerCase());\n  };\n\n  const isActorIncluded = actors => (\n    actors.find(actor => actor.toLowerCase().includes(searchQuery)));\n\n  const filteredMovies = movies.filter(movie => (\n    movie.title.toLowerCase().includes(searchQuery)\n      || isActorIncluded(movie.actors)));\n\n  return (\n    <div className=\"container\">\n      <NewMovieForm addMovie={addMovie} />\n      <FileUpload showUploadedMovies={showUploadedMovies} />\n      <div className=\"movieList-title\">Movie list</div>\n      <button\n        type=\"button\"\n        className=\"sort-btn\"\n        onClick={sortAlphabetically}\n      >\n        Sort movies alphabetically\n      </button>\n      <input\n        type=\"text\"\n        className=\"search-input\"\n        onChange={searchMovie}\n        placeholder=\"Enter a title or an actor\"\n      />\n      <MovieList movies={filteredMovies} removeMovie={removeMovie} />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}